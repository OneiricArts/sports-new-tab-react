{"version":3,"sources":["simpleui/MyCard.tsx","SportsDataAccessors/NFLHelper.ts","components/GameTable.tsx","components/NFL.tsx","hooks/useVisibilityHandlers.ts","App.tsx","index.tsx"],"names":["MyCard","CardHeader","title","children","Card","CardBody","convertToTypes","unTypedData","schedule","displayDate","w","games","gms","forEach","g","id","status","awayTeam","homeTeam","awayTeamHasPosession","homeTeamHasPosession","awayTeamWinning","homeTeamWinning","awayTeamScore","homeTeamScore","statusToDisplay","type","date","Date","value","toLocaleString","weekday","hour","minute","replace","trim","push","hidden","carryOverHiddenGames","cachedSchedule","map","i","cachedGame","filter","cg","fetchNFLDataAsync","a","async","fetch","json","typedData","typedDataWithHiddens","GameRow","game","removeGame","className","Button","outline","color","size","onClick","TableHeader","GameTable","Table","responsive","index","key","NFL","useState","setSchedule","isLoading","setIsLoading","upDateSchedule","console","log","cachedScheduleString","localStorage","getItem","JSON","parse","ReactDOM","unstable_batchedUpdates","setItem","stringify","useEffect","onVisibleCallback","pageVisible","inFocus","outFocus","handleVisibilityChange","document","window","addEventListener","removeEventListener","useVisibilityHandlers","removeItem","disabled","style","width","Spinner","Progress","animated","height","newGames","App","render","getElementById"],"mappings":"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","file":"static/js/main.2c18620c.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nconst MyCard:React.FC<{ title: ReactNode }> = ({ title, children}) => {\n  return (\n    <Card>\n      <CardHeader>{title}</CardHeader>\n      <CardBody>{children}</CardBody>\n    </Card>\n  );\n}\n\nexport const MyCardHeader = CardHeader;\n// export const MyCardBody = CardBody;\n\nexport default MyCard;\n","import { NFLSchedule } from './types';\n\nfunction convertToTypes(unTypedData: any) {\n  const schedule:NFLSchedule = {\n    displayDate: unTypedData.w,\n    games: []\n  };\n\n  unTypedData.gms.forEach((g:any) => {\n    const {\n      id,\n      status,\n      awayTeam,             homeTeam,\n      awayTeamHasPosession, homeTeamHasPosession,\n      awayTeamWinning,      homeTeamWinning,\n      awayTeamScore,        homeTeamScore\n    } = g;\n\n    let statusToDisplay = '';\n    try {\n      if (status.type === 'DATETIME') {\n        const date = new Date(status.value);\n\n        const options = { weekday: 'short', hour: '2-digit', minute: '2-digit' };\n        statusToDisplay = date.toLocaleString(\"en-US\", options).replace(/AM|PM/, '').trim();\n      } else {\n        statusToDisplay = status.value;\n      }\n    } finally {}\n\n    schedule.games.push(\n      {\n        id,\n        status: statusToDisplay,\n        awayTeam,             homeTeam,\n        awayTeamWinning,      homeTeamWinning,\n        awayTeamScore,        homeTeamScore,\n        awayTeamHasPosession, homeTeamHasPosession,\n        hidden: false\n      }\n    );\n  });\n  return schedule;\n}\n\nfunction carryOverHiddenGames(schedule: NFLSchedule, cachedSchedule: NFLSchedule) {\n  if (schedule.displayDate !== cachedSchedule.displayDate) return schedule;\n\n  schedule.games.map((g, i) => {\n    // if (g.id !== cachedSchedule.games[i].id)\n    // g.hidden = cachedSchedule.games[i].hidden;\n\n    // shouldn't this be of type Game | undefined\n    const cachedGame = cachedSchedule.games.filter(cg => cg.id === g.id)[0];\n    if (cachedGame) g.hidden = cachedGame.hidden;\n\n    // need a better way to do this\n\n    return g;\n  });\n\n  return schedule;\n}\n\nfunction sleep(ms:number) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport async function fetchNFLDataAsync(cachedSchedule: NFLSchedule|undefined): Promise<NFLSchedule> {\n  const url = 'https://sports-new-tab-page.appspot.com/nfl';\n  const unTypedData = await (await fetch(url)).json();\n  const typedData = convertToTypes(unTypedData);\n\n  if (!cachedSchedule) return typedData;\n\n  const typedDataWithHiddens = carryOverHiddenGames(typedData, cachedSchedule);\n  return typedDataWithHiddens;\n}\n","import * as React from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { NFLGame } from '../SportsDataAccessors/types';\n\nconst GameRow = ({ game, removeGame }: { game: NFLGame, removeGame: (id: number) => void }) => {\n  const handleClick = () => removeGame(game.id);\n\n  return (\n    <tr>\n      <td className=\"align-middle\">{game.status}</td>\n\n      <td className={`align-middle ${game.awayTeamWinning ? 'winning_team' : ''} ${game.awayTeamHasPosession ? 'has_posession' : ''}`}>\n        {game.awayTeam}\n        {game.awayTeamHasPosession && <span className=\"d-none d-md-inline d-lg-inline\"> üèà</span>}\n      </td>\n\n      <td className={`align-middle ${game.homeTeamWinning && 'winning_team'} ${game.homeTeamHasPosession ? 'has_posession' : ''}`}>\n        {game.homeTeam}\n        {game.homeTeamHasPosession && <span className=\"d-none d-md-inline d-lg-inline\"> üèà</span>}\n      </td>\n\n      <td className=\"align-middle text-right\">{game.awayTeamScore}</td>\n      <td className=\"align-middle text-right\">{game.homeTeamScore}</td>\n\n      <td className=\"align-middle text-right\">\n        <Button outline={true} color=\"secondary\" size=\"sm\" onClick={handleClick}>&#9587;</Button>\n      </td>\n    </tr>\n  );\n}\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th/>{/* status */}\n      <th>away</th>\n      <th>@home</th>\n      <th className=\"text-right\">a</th>\n      <th className=\"text-right\">h</th>\n      <th className=\"text-right\"/>{/* X */}\n    </tr>\n  </thead>\n);\n\nconst GameTable = ({ games, removeGame }: { games: NFLGame[], removeGame: (id: number) => void }) => (\n  <Table responsive size=\"sm\">\n    <TableHeader />\n    <tbody>\n      {\n        games\n          .filter(game => !game.hidden)\n          .map((game, index) => <GameRow key={index} game={game} removeGame={removeGame} />)\n      }\n    </tbody>\n  </Table>\n);\n\nexport default GameTable;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Progress, Spinner } from 'reactstrap';\nimport useVisibilityHandlers from '../hooks/useVisibilityHandlers';\nimport { Card } from '../simpleui';\nimport { fetchNFLDataAsync } from '../SportsDataAccessors/NFLHelper';\nimport { Schedule } from '../SportsDataAccessors/types';\nimport GameTable from './GameTable';\n\nexport default function NFL() {\n  const LOCAL_STORAGE_KEY = 'nfl-schedule-data';\n\n  const [schedule, setSchedule] = useState<Schedule>({\n    displayDate: '',\n    games: [],\n  });\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const upDateSchedule = async () => {\n    let cachedSchedule: Schedule | undefined;\n\n    // TODO only look at cache when needed\n    console.log('using cache')\n    const cachedScheduleString = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (cachedScheduleString) {\n      cachedSchedule = JSON.parse(cachedScheduleString);\n    }\n    //...//\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      if (cachedSchedule) setSchedule(cachedSchedule);\n      setIsLoading(true);\n    });\n\n    try {\n      const schedule = await fetchNFLDataAsync(cachedSchedule);\n      ReactDOM.unstable_batchedUpdates(() => {\n        setSchedule(schedule);\n        setIsLoading(false);\n      });\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n    } catch {\n      setIsLoading(false);\n    }\n  }\n\n  const resetSchedule = () => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    upDateSchedule();\n  }\n\n  useEffect(() => {\n    upDateSchedule();\n  }, []);\n\n  useVisibilityHandlers(upDateSchedule);\n\n  const removeGame = (id: number) => {\n    const newGames = schedule.games.map(game => {\n      if (game.id === id) {\n        game.hidden = true;\n      }\n      return game;\n    });\n\n    setSchedule({ displayDate: schedule.displayDate, games: newGames });\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n  }\n\n  console.log('rendering...');\n  return (\n    <Card\n      title={\n        <span>\n          <span className=\"font-weight-bold\">NFL</span>\n          <span className=\"pl-2 font-weight-light font-italic text-lowercase text-muted\">{schedule.displayDate}</span>\n          <Button\n            outline\n            size=\"sm\"\n            className=\"float-right\"\n            onClick={resetSchedule}\n            disabled={isLoading}\n            style={{width:'50px'}}\n          >\n            {isLoading ? <Spinner size=\"sm\" color=\"primary\" type=\"grow\" /> : 'Reset'}\n          </Button>\n        </span>\n      }\n    >\n      {isLoading && <Progress animated style={{height: '5px'}} color=\"info\" value={100} />}\n\n      <GameTable games={schedule.games} removeGame={removeGame} />\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n\n// TODO -- write test with multiple components using independenly\nexport default function useVisibilityHandlers(onVisibleCallback: () => void) {\n  let pageVisible = true;\n\n  const inFocus = () => {\n    if (!pageVisible) { onVisibleCallback(); }\n    pageVisible = true;\n  }\n\n  const outFocus = () => pageVisible = false;\n\n  const handleVisibilityChange = () => {\n    if (document.hidden) {\n      pageVisible = false;\n    } else {\n      if (!pageVisible) { onVisibleCallback(); }\n      pageVisible = true;\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('focus', inFocus);\n    window.addEventListener('blur', outFocus);\n    document.addEventListener('visibilitychange', handleVisibilityChange, false);\n\n    return () =>{\n      window.removeEventListener('focus', inFocus);\n      window.removeEventListener('blur', outFocus);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n}\n","import React from 'react';\nimport './App.css';\nimport NFL from './components/NFL';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div className=\"card-columns\">\n          <NFL />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}