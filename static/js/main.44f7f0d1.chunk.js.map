{"version":3,"sources":["SportsDataAccessors/NFLHelper.ts","components/GameTable.tsx","uicomponents/MyCard.tsx","components/NFL.tsx","App.tsx","index.tsx"],"names":["convertToTypes","unTypedData","schedule","displayDate","concat","w","games","gms","map","g","status","awayTeam","homeTeam","qtr","playing","clock","extrainfo","gameSchedule","gameDate","t","visitorNickname","away","abbr","homeNickname","home","visitor_pos","home_pos","push","id","eid","awayTeamWinning","visitor_winning","homeTeamWinning","home_winning","awayTeamScore","score","T","homeTeamScore","hidden","carryOverHiddenGames","cachedSchedule","i","cachedGame","filter","cg","_callee","typedData","typedDataWithHiddens","regenerator_default","a","wrap","_context","prev","next","fetch","sent","abrupt","stop","GameRow","_ref","game","removeGame","react","className","Button","outline","color","size","onClick","TableHeader","GameTable","_ref2","Table","responsive","GameTable_TableHeader","index","GameTable_GameRow","key","MyCard","CardHeader","title","children","react_default","createElement","Card","CardBody","NFL","_useState","useState","_useState2","Object","slicedToArray","setSchedule","upDateSchedule","cachedScheduleString","localStorage","getItem","JSON","parse","_x","_fetchNFLDataAsync","apply","this","arguments","fetchNFLDataAsync","then","setItem","stringify","useEffect","console","log","uicomponents_MyCard","removeItem","components_GameTable","newGames","App","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.44f7f0d1.chunk.js","sourcesContent":["import { Schedule } from './types';\nimport NFLData from './NFLHelperOld';\n\nfunction convertToTypes(unTypedData: any) {\n  const schedule:Schedule = {\n    displayDate: `Week ${unTypedData.w}`,\n    games: []\n  };\n\n  unTypedData.gms.map((g:any) => {\n    let status: string;\n    if (g.qtr) {\n      if (g.playing) {\n        status = `${g.qtr}Q, ${g.clock}`;\n      } else {\n        status = g.qtr;\n      }\n    } else {\n      if (g.extrainfo) {\n        status = `${g.extrainfo.gameSchedule.gameDate} ${g.t}`;\n      } else {\n        status = g.t;\n      }\n    }\n\n    let awayTeam: string;\n    if (g.extrainfo) {\n      awayTeam = g.extrainfo.gameSchedule.visitorNickname;\n    } else {\n      awayTeam = g.away.abbr;\n    }\n\n    let homeTeam: string;\n    if (g.extrainfo) {\n      homeTeam = g.extrainfo.gameSchedule.homeNickname;\n    } else {\n      homeTeam = g.home.abbr;\n    }\n\n    if (g.visitor_pos) { awayTeam = `${awayTeam} 🏈` } // TODO remove\n    if (g.home_pos) { homeTeam = `${homeTeam} 🏈` } // TODO remove\n\n    schedule.games.push(\n      {\n        id: g.eid,\n        status: status,\n        awayTeam: awayTeam,\n        homeTeam: homeTeam,\n        awayTeamWinning: g.visitor_winning,\n        homeTeamWinning: g.home_winning,\n        awayTeamScore: g.away.score.T,\n        homeTeamScore: g.home.score.T,\n        hidden: false\n      }\n    );\n\n    return g;\n  });\n  return schedule;\n}\n\nfunction carryOverHiddenGames(schedule: Schedule, cachedSchedule: Schedule) {\n  if (schedule.displayDate !== cachedSchedule.displayDate) return schedule;\n\n  schedule.games.map((g, i) => {\n    // if (g.id !== cachedSchedule.games[i].id)\n    // g.hidden = cachedSchedule.games[i].hidden;\n\n    // shouldn't this be of type Game | undefined\n    const cachedGame = cachedSchedule.games.filter(cg => cg.id === g.id)[0];\n    if (cachedGame) g.hidden = cachedGame.hidden;\n\n    // need a better way to do this\n\n    return g;\n  });\n\n  return schedule;\n}\n\nexport async function fetchNFLDataAsync(cachedSchedule: Schedule|undefined): Promise<Schedule> {\n  const unTypedData = await fetch('https://us-central1-sports-new-tab.cloudfunctions.net/nfl-data');\n  const typedData = convertToTypes(unTypedData);\n\n  if (!cachedSchedule) return typedData;\n\n  const typedDataWithHiddens = carryOverHiddenGames(typedData, cachedSchedule);\n  return typedDataWithHiddens;\n}\n","import * as React from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { Game } from '../SportsDataAccessors/types';\n\nconst GameRow = ({ game, removeGame }: { game: Game, removeGame: (id: number) => void }) => {\n  const handleClick = () => removeGame(game.id);\n\n  return (\n    <tr>\n      <td>{game.status}</td>\n\n      <td className={game.awayTeamWinning ? 'winning_team' : ''}>\n        {game.awayTeam}\n      </td>\n\n      <td className={game.homeTeamWinning ? 'winning_team' : ''}>\n        {game.homeTeam}\n      </td>\n\n      <td>{game.awayTeamScore}</td>\n      <td>{game.homeTeamScore}</td>\n\n      <td>\n        <Button outline={true} color=\"secondary\" size=\"sm\" onClick={handleClick}>&#9587;</Button>\n      </td>\n    </tr>\n  );\n}\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th/>{/* status */}\n      <th>away</th>\n      <th>@home</th>\n      <th>a</th>\n      <th>h</th>\n      <th/>{/* X */}\n    </tr>\n  </thead>\n);\n\nconst GameTable = ({ games, removeGame }: { games: Game[], removeGame: (id: number) => void }) => (\n  <Table responsive size=\"sm\">\n    <TableHeader />\n    <tbody>\n      {\n        games\n          .filter(game => !game.hidden)\n          .map((game, index) => <GameRow key={index} game={game} removeGame={removeGame} />)\n      }\n    </tbody>\n  </Table>\n);\n\nexport default GameTable;\n","import React, { ReactNode } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nconst MyCard:React.FC<{ title: ReactNode }> = ({ title, children}) => {\n  return (\n    <Card>\n      <CardHeader>{title}</CardHeader>\n      <CardBody>{children}</CardBody>\n    </Card>\n  );\n}\n\nexport const MyCardHeader = CardHeader;\n// export const MyCardBody = CardBody;\n\nexport default MyCard;\n","import React, { useEffect, useState } from 'react';\nimport { fetchNFLDataAsync } from '../SportsDataAccessors/NFLHelper';\nimport { Schedule } from '../SportsDataAccessors/types';\nimport GameTable from './GameTable';\nimport MyCard from '../uicomponents/MyCard';\nimport { Button } from 'reactstrap';\n\nexport default function NFL() {\n  const LOCAL_STORAGE_KEY = 'nfl-schedule-data';\n\n  const [schedule, setSchedule] = useState<Schedule>({\n    displayDate: '',\n    games: [],\n  });\n\n  const upDateSchedule = () => {\n    let cachedSchedule: Schedule | undefined;\n    const cachedScheduleString = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (cachedScheduleString) {\n      cachedSchedule = JSON.parse(cachedScheduleString);\n      if (cachedSchedule) setSchedule(cachedSchedule);\n    }\n\n    fetchNFLDataAsync(cachedSchedule).then(schedule => {\n      setSchedule(schedule);\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n    });\n  }\n\n  const resetSchedule = () => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    upDateSchedule();\n  }\n\n  useEffect(() => {\n    upDateSchedule();\n  }, []);\n\n  const removeGame = (id: number) => {\n    const newGames = schedule.games.map(game => {\n      if (game.id === id) {\n        game.hidden = true;\n      }\n      return game;\n    });\n\n    setSchedule({ displayDate: schedule.displayDate, games: newGames });\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n  }\n\n  console.log('rendering...');\n  return (\n    <MyCard\n      title={\n        <span>\n          NFL // {schedule.displayDate}\n          <Button outline size=\"sm\" className=\"float-right\" onClick={resetSchedule}>Reset</Button>\n        </span>\n      }\n    >\n\n      <GameTable games={schedule.games} removeGame={removeGame} />\n    </MyCard>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport NFL from './components/NFL';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div className=\"card-columns\">\n          <NFL />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}