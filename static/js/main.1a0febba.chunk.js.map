{"version":3,"sources":["simpleui/MyCard.tsx","SportsDataAccessors/NFLHelper.ts","components/GameTable.tsx","components/NFL.tsx","hooks/useVisibilityHandlers.ts","App.tsx","index.tsx"],"names":["MyCard","CardHeader","_ref","title","children","react_default","a","createElement","Card","CardBody","convertToTypes","unTypedData","schedule","displayDate","concat","w","games","gms","forEach","g","_g$organizedInfo","organizedInfo","id","status","awayTeam","homeTeam","awayTeamHasPosession","homeTeamHasPosession","awayTeamWinning","homeTeamWinning","awayTeamScore","homeTeamScore","statusToDisplay","type","date","Date","value","toLocaleString","weekday","hour","minute","replace","trim","push","hidden","carryOverHiddenGames","cachedSchedule","map","i","cachedGame","filter","cg","fetchNFLDataAsync","_x","_fetchNFLDataAsync","apply","this","arguments","_callee","typedData","typedDataWithHiddens","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","GameRow","game","removeGame","react","className","Button","outline","color","size","onClick","TableHeader","GameTable","_ref2","Table","responsive","GameTable_TableHeader","index","GameTable_GameRow","key","NFL","_useState","useState","_useState2","Object","slicedToArray","setSchedule","_useState3","_useState4","isLoading","setIsLoading","upDateSchedule","asyncToGenerator","mark","cachedScheduleString","_schedule","console","log","localStorage","getItem","JSON","parse","ReactDOM","unstable_batchedUpdates","setItem","stringify","t0","useEffect","onVisibleCallback","pageVisible","inFocus","outFocus","handleVisibilityChange","document","window","addEventListener","removeEventListener","useVisibilityHandlers","simpleui_MyCard","removeItem","disabled","style","width","Spinner","Progress","animated","height","components_GameTable","newGames","App","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.1a0febba.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nconst MyCard:React.FC<{ title: ReactNode }> = ({ title, children}) => {\n  return (\n    <Card>\n      <CardHeader>{title}</CardHeader>\n      <CardBody>{children}</CardBody>\n    </Card>\n  );\n}\n\nexport const MyCardHeader = CardHeader;\n// export const MyCardBody = CardBody;\n\nexport default MyCard;\n","import { NFLSchedule } from './types';\n\nfunction convertToTypes(unTypedData: any) {\n  const schedule:NFLSchedule = {\n    displayDate: `Week ${unTypedData.w}`,\n    games: []\n  };\n\n  unTypedData.gms.forEach((g:any) => {\n    const {\n      id,\n      status,\n      awayTeam,             homeTeam,\n      awayTeamHasPosession, homeTeamHasPosession,\n      awayTeamWinning,      homeTeamWinning,\n      awayTeamScore,        homeTeamScore\n    } = g.organizedInfo;\n\n    let statusToDisplay = '';\n    try {\n      if (status.type === 'DATETIME') {\n        const date = new Date(g.organizedInfo.status.value);\n\n        const options = { weekday: 'short', hour: '2-digit', minute: '2-digit' };\n        statusToDisplay = date.toLocaleString(\"en-US\", options).replace(/AM|PM/, '').trim();\n      } else {\n        statusToDisplay = status.value;\n      }\n    } finally {}\n\n    schedule.games.push(\n      {\n        id,\n        status: statusToDisplay,\n        awayTeam,             homeTeam,\n        awayTeamWinning,      homeTeamWinning,\n        awayTeamScore,        homeTeamScore,\n        awayTeamHasPosession, homeTeamHasPosession,\n        hidden: false\n      }\n    );\n  });\n  return schedule;\n}\n\nfunction carryOverHiddenGames(schedule: NFLSchedule, cachedSchedule: NFLSchedule) {\n  if (schedule.displayDate !== cachedSchedule.displayDate) return schedule;\n\n  schedule.games.map((g, i) => {\n    // if (g.id !== cachedSchedule.games[i].id)\n    // g.hidden = cachedSchedule.games[i].hidden;\n\n    // shouldn't this be of type Game | undefined\n    const cachedGame = cachedSchedule.games.filter(cg => cg.id === g.id)[0];\n    if (cachedGame) g.hidden = cachedGame.hidden;\n\n    // need a better way to do this\n\n    return g;\n  });\n\n  return schedule;\n}\n\nfunction sleep(ms:number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport async function fetchNFLDataAsync(cachedSchedule: NFLSchedule|undefined): Promise<NFLSchedule> {\n  const url = 'https://sports-new-tab-page.appspot.com/nfl';\n  const unTypedData = await (await fetch(url)).json();\n  const typedData = convertToTypes(unTypedData);\n\n  if (!cachedSchedule) return typedData;\n\n  const typedDataWithHiddens = carryOverHiddenGames(typedData, cachedSchedule);\n  return typedDataWithHiddens;\n}\n","import * as React from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { NFLGame } from '../SportsDataAccessors/types';\n\nconst GameRow = ({ game, removeGame }: { game: NFLGame, removeGame: (id: number) => void }) => {\n  const handleClick = () => removeGame(game.id);\n\n  return (\n    <tr>\n      <td>{game.status}</td>\n\n      <td className={`${game.awayTeamWinning ? 'winning_team' : ''} ${game.awayTeamHasPosession ? 'has_posession' : ''}`}>\n        {game.awayTeam}\n        {game.awayTeamHasPosession && <span className=\"d-none d-md-inline d-lg-inline\"> 🏈</span>}\n      </td>\n\n      <td className={`${game.homeTeamWinning && 'winning_team'} ${game.homeTeamHasPosession ? 'has_posession' : ''}`}>\n        {game.homeTeam}\n        {game.homeTeamHasPosession && <span className=\"d-none d-md-inline d-lg-inline\"> 🏈</span>}\n      </td>\n\n      <td>{game.awayTeamScore}</td>\n      <td>{game.homeTeamScore}</td>\n\n      <td>\n        <Button outline={true} color=\"secondary\" size=\"sm\" onClick={handleClick}>&#9587;</Button>\n      </td>\n    </tr>\n  );\n}\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th/>{/* status */}\n      <th>away</th>\n      <th>@home</th>\n      <th>a</th>\n      <th>h</th>\n      <th/>{/* X */}\n    </tr>\n  </thead>\n);\n\nconst GameTable = ({ games, removeGame }: { games: NFLGame[], removeGame: (id: number) => void }) => (\n  <Table responsive size=\"sm\">\n    <TableHeader />\n    <tbody>\n      {\n        games\n          .filter(game => !game.hidden)\n          .map((game, index) => <GameRow key={index} game={game} removeGame={removeGame} />)\n      }\n    </tbody>\n  </Table>\n);\n\nexport default GameTable;\n","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Progress, Spinner } from 'reactstrap';\nimport useVisibilityHandlers from '../hooks/useVisibilityHandlers';\nimport { Card } from '../simpleui';\nimport { fetchNFLDataAsync } from '../SportsDataAccessors/NFLHelper';\nimport { Schedule } from '../SportsDataAccessors/types';\nimport GameTable from './GameTable';\n\nexport default function NFL() {\n  const LOCAL_STORAGE_KEY = 'nfl-schedule-data';\n\n  const [schedule, setSchedule] = useState<Schedule>({\n    displayDate: '',\n    games: [],\n  });\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const upDateSchedule = async () => {\n    let cachedSchedule: Schedule | undefined;\n\n    // TODO only look at cache when needed\n    console.log('using cache')\n    const cachedScheduleString = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (cachedScheduleString) {\n      cachedSchedule = JSON.parse(cachedScheduleString);\n    }\n    //...//\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      if (cachedSchedule) setSchedule(cachedSchedule);\n      setIsLoading(true);\n    });\n\n    try {\n      const schedule = await fetchNFLDataAsync(cachedSchedule);\n      ReactDOM.unstable_batchedUpdates(() => {\n        setSchedule(schedule);\n        setIsLoading(false);\n      });\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n    } catch {\n      setIsLoading(false);\n    }\n  }\n\n  const resetSchedule = () => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    upDateSchedule();\n  }\n\n  useEffect(() => {\n    upDateSchedule();\n  }, []);\n\n  useVisibilityHandlers(upDateSchedule);\n\n  const removeGame = (id: number) => {\n    const newGames = schedule.games.map(game => {\n      if (game.id === id) {\n        game.hidden = true;\n      }\n      return game;\n    });\n\n    setSchedule({ displayDate: schedule.displayDate, games: newGames });\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n  }\n\n  console.log('rendering...');\n  return (\n    <Card\n      title={\n        <span>\n          <span className=\"font-weight-bold\">NFL</span>\n          <span className=\"pl-2 font-weight-light font-italic text-lowercase text-muted\">{schedule.displayDate}</span>\n          <Button\n            outline\n            size=\"sm\"\n            className=\"float-right\"\n            onClick={resetSchedule}\n            disabled={isLoading}\n            style={{width:'50px'}}\n          >\n            {isLoading ? <Spinner size=\"sm\" color=\"primary\" type=\"grow\" /> : 'Reset'}\n          </Button>\n        </span>\n      }\n    >\n      {isLoading && <Progress animated style={{height: '5px'}} color=\"info\" value={100} />}\n\n      <GameTable games={schedule.games} removeGame={removeGame} />\n    </Card>\n  );\n}\n","import { useEffect } from 'react';\n\n// TODO -- write test with multiple components using independenly\nexport default function useVisibilityHandlers(onVisibleCallback: () => void) {\n  let pageVisible = true;\n\n  const inFocus = () => {\n    if (!pageVisible) { onVisibleCallback(); }\n    pageVisible = true;\n  }\n\n  const outFocus = () => pageVisible = false;\n\n  const handleVisibilityChange = () => {\n    if (document.hidden) {\n      pageVisible = false;\n    } else {\n      if (!pageVisible) { onVisibleCallback(); }\n      pageVisible = true;\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('focus', inFocus);\n    window.addEventListener('blur', outFocus);\n    document.addEventListener('visibilitychange', handleVisibilityChange, false);\n\n    return () =>{\n      window.removeEventListener('focus', inFocus);\n      window.removeEventListener('blur', outFocus);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n}\n","import React from 'react';\nimport './App.css';\nimport NFL from './components/NFL';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div className=\"card-columns\">\n          <NFL />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}