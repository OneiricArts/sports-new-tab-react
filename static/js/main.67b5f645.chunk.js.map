{"version":3,"sources":["SportsDataAccessors/NFLHelper.tsx","components/GameTable.tsx","components/NFL.tsx","App.tsx","index.tsx"],"names":["_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","displayDate","games","id","status","awayTeam","homeTeam","awayTeamWinning","homeTeamWinning","awayTeamScore","homeTeamScore","hidden","stop","GameRow","_ref","game","removeGame","react","className","Button","outline","color","size","onClick","TableHeader","GameTable","_ref2","Table","GameTable_TableHeader","filter","map","index","GameTable_GameRow","key","NFL","_useState","useState","_useState2","Object","slicedToArray","schedule","setSchedule","useEffect","_fetchNFLDataAsync","apply","this","arguments","fetchNFLDataAsync","then","console","log","react_default","createElement","components_GameTable","newGames","App","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.67b5f645.chunk.js","sourcesContent":["import { Game, Schedule } from './types';\n\nexport function getNFLData(): Schedule {\n  const games: Game[] = [\n    {\n      id: 123123,\n      status: '3:04 4Qtr',\n      awayTeam: 'Rams',\n      homeTeam: '49ers',\n      awayTeamWinning: true,\n      homeTeamWinning: false,\n      awayTeamScore: 49,\n      homeTeamScore: 78,\n      hidden: false,\n    },\n    {\n      id: 123124,\n      status: '1:24 2Qtr',\n      awayTeam: 'Chargers',\n      homeTeam: 'Patriots',\n      awayTeamWinning: true,\n      homeTeamWinning: false,\n      awayTeamScore: 23,\n      homeTeamScore: 21,\n      hidden: false,\n    },\n    {\n      id: 123125,\n      status: '10:04 1Qtr',\n      awayTeam: 'Seahaws',\n      homeTeam: 'Cardinals',\n      awayTeamWinning: true,\n      homeTeamWinning: false,\n      awayTeamScore: 4,\n      homeTeamScore: 2,\n      hidden: false,\n    },\n    {\n      id: 123126,\n      status: '3:04 4thQtr',\n      awayTeam: 'Rams',\n      homeTeam: '49ers',\n      awayTeamWinning: true,\n      homeTeamWinning: false,\n      awayTeamScore: 32,\n      homeTeamScore: 21,\n      hidden: false,\n    },\n  ];\n  return {\n    displayDate: '0',\n    games,\n  };\n}\n\nexport async function fetchNFLDataAsync(): Promise<Schedule> {\n  return Promise.resolve(getNFLData());\n}\n","import * as React from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { Game } from '../SportsDataAccessors/types';\n\nconst GameRow = ({ game, removeGame }: { game: Game, removeGame: (id: number) => void }) => {\n  const handleClick = () => removeGame(game.id);\n\n  return (\n    <tr>\n      <td>{game.status}</td>\n\n      <td className={game.awayTeamWinning ? 'winning_team' : ''}>\n        {game.awayTeam}\n      </td>\n\n      <td className={game.homeTeamWinning ? 'winning_team' : ''}>\n        {game.homeTeam}\n      </td>\n\n      <td>{game.awayTeamScore}</td>\n      <td>{game.homeTeamScore}</td>\n\n      <td>\n        <Button outline={true} color=\"secondary\" size=\"sm\" onClick={handleClick}>&#9587;</Button>\n      </td>\n    </tr>\n  );\n}\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th/>{/* status */}\n      <th>away</th>\n      <th>@home</th>\n      <th>a</th>\n      <th>h</th>\n      <th/>{/* X */}\n    </tr>\n  </thead>\n);\n\nconst GameTable = ({ games, removeGame }: { games: Game[], removeGame: (id: number) => void }) => (\n  <Table>\n    <TableHeader />\n    <tbody>\n      {games\n        .filter(game => !game.hidden)\n        .map((game, index) => <GameRow key={index} game={game} removeGame={removeGame} />)}\n    </tbody>\n  </Table>\n);\n\nexport default GameTable;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { fetchNFLDataAsync } from '../SportsDataAccessors/NFLHelper';\nimport { Schedule } from '../SportsDataAccessors/types';\nimport GameTable from './GameTable';\n\nexport default function NFL() {\n  const [schedule, setSchedule] = useState<Schedule>({\n    displayDate: '',\n    games: [],\n  });\n\n  useEffect(() => {\n    fetchNFLDataAsync().then(schedule => setSchedule(schedule));\n  }, []);\n\n  const removeGame = (id: number) => {\n    const newGames = schedule.games.map(game => {\n      if (game.id === id) {\n        game.hidden = true;\n      }\n      return game;\n    });\n\n    setSchedule({ displayDate: schedule.displayDate, games: newGames });\n  }\n\n  console.log('rendering...');\n  if (!schedule.games) return(<p>Error...</p>)\n  return (\n    <Fragment>\n      <h1>NFL</h1>\n      <h3>Week {schedule.displayDate}</h3>\n      <GameTable games={schedule.games} removeGame={removeGame} />\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport NFL from './components/NFL';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NFL />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}