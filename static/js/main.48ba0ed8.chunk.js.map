{"version":3,"sources":["simpleui/MyCard.tsx","SportsDataAccessors/NFLHelper.ts","components/GameTable.tsx","components/NFL.tsx","hooks/useVisibilityHandlers.ts","App.tsx","index.tsx"],"names":["MyCard","CardHeader","_ref","title","children","react_default","a","createElement","Card","CardBody","convertToTypes","unTypedData","schedule","displayDate","concat","w","games","gms","forEach","g","_g$organizedInfo","organizedInfo","id","status","awayTeam","homeTeam","awayTeamHasPosession","homeTeamHasPosession","awayTeamWinning","homeTeamWinning","awayTeamScore","homeTeamScore","statusToDisplay","type","date","Date","value","toLocaleString","weekday","hour","minute","replace","trim","push","hidden","fetchNFLDataAsync","_x","_fetchNFLDataAsync","apply","this","arguments","_callee","cachedSchedule","typedData","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","FootballEmoji","react","role","aria-label","className","GameRow","game","removeGame","GameTable_FootballEmoji","Button","outline","color","size","onClick","TableHeader","GameTable","_ref2","Table","responsive","GameTable_TableHeader","filter","map","index","GameTable_GameRow","key","NFL","_useState","useState","savedUserDataString","localStorage","getItem","JSON","parse","removedGames","_useState2","Object","slicedToArray","userLocalData","setUserLocalData","_useState3","_useState4","resetCounter","setResetCounter","_useState5","console","log","cachedScheduleString","_useState6","setSchedule","_useState7","_useState8","isLoading","setIsLoading","upDateSchedule","asyncToGenerator","mark","newSchedule","undefined","ReactDOM","unstable_batchedUpdates","setItem","stringify","t0","useEffect","onVisibleCallback","onVisibleCtr","setOnVisibleCtr","pageVisible","inFocus","outFocus","handleVisibilityChange","document","window","addEventListener","removeEventListener","useVisibilityHandlers","simpleui_MyCard","removeItem","disabled","style","width","Spinner","Progress","animated","height","components_GameTable","newUserLocalData","objectSpread","App","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.48ba0ed8.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\n\nconst MyCard:React.FC<{ title: ReactNode }> = ({ title, children}) => {\n  return (\n    <Card>\n      <CardHeader>{title}</CardHeader>\n      <CardBody>{children}</CardBody>\n    </Card>\n  );\n}\n\nexport const MyCardHeader = CardHeader;\n// export const MyCardBody = CardBody;\n\nexport default MyCard;\n","import { NFLSchedule } from './types';\n\nfunction convertToTypes(unTypedData: any) {\n  const schedule:NFLSchedule = {\n    displayDate: `Week ${unTypedData.w}`,\n    games: []\n  };\n\n  unTypedData.gms.forEach((g:any) => {\n    const {\n      id,\n      status,\n      awayTeam,             homeTeam,\n      awayTeamHasPosession, homeTeamHasPosession,\n      awayTeamWinning,      homeTeamWinning,\n      awayTeamScore,        homeTeamScore\n    } = g.organizedInfo;\n\n    let statusToDisplay = '';\n    try {\n      if (status.type === 'DATETIME') {\n        const date = new Date(g.organizedInfo.status.value);\n\n        const options = { weekday: 'short', hour: '2-digit', minute: '2-digit' };\n        statusToDisplay = date.toLocaleString(\"en-US\", options).replace(/AM|PM/, '').trim();\n      } else {\n        statusToDisplay = status.value;\n      }\n    } finally {}\n\n    schedule.games.push(\n      {\n        id,\n        status: statusToDisplay,\n        awayTeam,             homeTeam,\n        awayTeamWinning,      homeTeamWinning,\n        awayTeamScore,        homeTeamScore,\n        awayTeamHasPosession, homeTeamHasPosession,\n        hidden: false\n      }\n    );\n  });\n  return schedule;\n}\n\nexport function carryOverHiddenGames(schedule: NFLSchedule, cachedSchedule: NFLSchedule) {\n  if (schedule.displayDate !== cachedSchedule.displayDate) return schedule;\n\n  schedule.games.map((g, i) => {\n    // if (g.id !== cachedSchedule.games[i].id)\n    // g.hidden = cachedSchedule.games[i].hidden;\n\n    // shouldn't this be of type Game | undefined\n    const cachedGame = cachedSchedule.games.filter(cg => cg.id === g.id)[0];\n    if (cachedGame) g.hidden = cachedGame.hidden;\n\n    // need a better way to do this\n\n    return g;\n  });\n\n  return schedule;\n}\n\n// use: await sleep();\nfunction sleep(ms:number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport async function fetchNFLDataAsync(cachedSchedule: NFLSchedule|undefined): Promise<NFLSchedule> {\n  // await sleep(1000);\n  // const url = 'http://localhost:8080/nfl'; // TODO have env flag to develop with local service\n  const url = 'https://sports-new-tab-page.appspot.com/nfl';\n  const unTypedData = await (await fetch(url)).json();\n  const typedData = convertToTypes(unTypedData);\n\n  if (!cachedSchedule) return typedData;\n\n  // const typedDataWithHiddens = carryOverHiddenGames(typedData, cachedSchedule);\n  return typedData;\n}\n","import * as React from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { NFLGame } from '../SportsDataAccessors/types';\n\nconst FootballEmoji = () =>\n  <span role=\"img\" aria-label=\"has posession\" className=\"d-none d-md-inline d-lg-inline\">\n    &nbsp;🏈\n  </span>;\n\nconst GameRow = ({ game, removeGame }: { game: NFLGame, removeGame: (id: number) => void }) => {\n  const handleClick = () => removeGame(game.id);\n\n  return (\n    <tr>\n      <td className=\"align-middle\">{game.status}</td>\n\n      <td className={`align-middle ${game.awayTeamWinning ? 'winning_team' : ''} ${game.awayTeamHasPosession ? 'has_posession' : ''}`}>\n        {game.awayTeam}\n        {true && <FootballEmoji />}\n      </td>\n\n      <td className={`align-middle ${game.homeTeamWinning && 'winning_team'} ${game.homeTeamHasPosession ? 'has_posession' : ''}`}>\n        {game.homeTeam}\n        {game.homeTeamHasPosession && <FootballEmoji />}\n      </td>\n\n      <td className=\"align-middle text-right\">{game.awayTeamScore}</td>\n      <td className=\"align-middle text-right\">{game.homeTeamScore}</td>\n\n      <td className=\"align-middle text-right\">\n        <Button outline={true} color=\"secondary\" size=\"sm\" onClick={handleClick}>&#9587;</Button>\n      </td>\n    </tr>\n  );\n}\n\nconst TableHeader = () => (\n  <thead>\n    <tr>\n      <th/>{/* status */}\n      <th>away</th>\n      <th>@home</th>\n      <th className=\"text-right\">a</th>\n      <th className=\"text-right\">h</th>\n      <th className=\"text-right\"/>{/* X */}\n    </tr>\n  </thead>\n);\n\nconst GameTable = ({ games, removeGame }: { games: NFLGame[], removeGame: (id: number) => void }) => (\n  <Table responsive size=\"sm\">\n    <TableHeader />\n    <tbody>\n      {\n        games\n          .filter(game => !game.hidden)\n          .map((game, index) => <GameRow key={index} game={game} removeGame={removeGame} />)\n      }\n    </tbody>\n  </Table>\n);\n\nexport default GameTable;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Progress, Spinner } from 'reactstrap';\nimport useVisibilityHandlers from '../hooks/useVisibilityHandlers';\nimport { Card } from '../simpleui';\nimport { fetchNFLDataAsync } from '../SportsDataAccessors/NFLHelper';\nimport { Schedule } from '../SportsDataAccessors/types';\nimport GameTable from './GameTable';\n\ninterface NflUserDataI {\n  removedGames: {\n    date: string;\n    games: { // wanted to use Set but its a pain to stringify and store\n      [key: number]: boolean;\n    }\n  }\n}\n\nexport default function NFL() {\n  const LOCAL_STORAGE_KEY = 'nfl-schedule-data';\n  const USER_DATA_LOCAL_STORAGE_KEY = 'nfl-user-data';\n\n  const [userLocalData, setUserLocalData] = useState<NflUserDataI>(() => {\n    const savedUserDataString = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\n    if (savedUserDataString) {\n      const savedUserDataJSON = JSON.parse(savedUserDataString);\n      return savedUserDataJSON;\n    }\n\n    return {\n      removedGames: {\n        date: '',\n        games: {}\n      }\n    }\n  });\n\n  const [resetCounter, setResetCounter] = useState<number>(0);\n\n  const [schedule, setSchedule] = useState<Schedule>(() => {\n    console.log('using cache')\n\n    const cachedScheduleString = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (cachedScheduleString) return JSON.parse(cachedScheduleString);\n    else return { displayDate: '', games: [] };\n  });\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const upDateSchedule = async () => {\n    console.log('<updating>');\n    console.log(schedule);\n    setIsLoading(true);\n\n    try {\n      const newSchedule = await fetchNFLDataAsync(undefined);\n      ReactDOM.unstable_batchedUpdates(() => {\n        setSchedule(newSchedule);\n        setIsLoading(false);\n      });\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(schedule));\n    } catch {\n      setIsLoading(false);\n    }\n  }\n\n  const resetSchedule = () => {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    localStorage.removeItem(USER_DATA_LOCAL_STORAGE_KEY);\n\n    setUserLocalData({\n      removedGames: {\n        date: '',\n        games: {}\n      }\n    });\n\n    setResetCounter(resetCounter + 1);\n\n    console.log('>>> reseting');\n    // console.log(schedule);\n    // setSchedule({ games: [], displayDate: ''});\n    // console.log(schedule);\n    // upDateSchedule();\n  }\n\n  useEffect(() => {\n    upDateSchedule();\n  }, [resetCounter]);\n\n  useVisibilityHandlers(upDateSchedule);\n\n  // const [onVisibleCtr] = useVisibilityHandlers(() => undefined);\n\n  // useEffect(() => {\n  //   if (onVisibleCtr) upDateSchedule();\n  // }, [upDateSchedule, onVisibleCtr]);\n\n  // const [scheduleFromNetwork, isLoading, resetSchedule] = useFetchData(LOCAL_STORAGE_KEY);\n  // const schedule = carryOverHiddenGames(scheduleFromNetwork, { displayDate: '', games: []});\n\n  const removeGame = (id: number) => {\n    const newUserLocalData = { ... userLocalData};\n\n    // current removedGames points to older date\n    if (newUserLocalData.removedGames.date !== schedule.displayDate) {\n      newUserLocalData.removedGames.date = schedule.displayDate;\n      newUserLocalData.removedGames.games = {};\n    }\n\n    newUserLocalData.removedGames.games[id] = true;\n\n    setUserLocalData(newUserLocalData);\n    localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(newUserLocalData));\n  }\n\n  ///\n\n  schedule.games.map(game => {\n      game.hidden = false;\n  });\n\n  if (schedule.displayDate === userLocalData.removedGames.date) {\n    schedule.games.map(game => {\n      if(userLocalData.removedGames.games[game.id]) {\n        console.log('hidden')\n        game.hidden = true;}\n    });\n  }\n\n\n  console.log('rendering...');\n  // console.log(schedule);\n  console.log(userLocalData);\n  return (\n    <Card\n      title={\n        <span>\n          <span className=\"font-weight-bold\">NFL</span>\n          <span className=\"pl-2 font-weight-light font-italic text-lowercase text-muted\">{schedule.displayDate}</span>\n          <Button\n            outline\n            size=\"sm\"\n            className=\"float-right\"\n            onClick={resetSchedule}\n            disabled={isLoading}\n            style={{ width: '50px' }}\n          >\n            {isLoading ? <Spinner size=\"sm\" color=\"primary\" type=\"grow\" /> : 'Reset'}\n          </Button>\n        </span>\n      }\n    >\n      {isLoading && <Progress animated style={{ height: '5px' }} color=\"info\" value={100} />}\n\n      <GameTable games={schedule.games} removeGame={removeGame} />\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\n\n// TODO -- write test with multiple components using independenly\nexport default function useVisibilityHandlers(onVisibleCallback: () => void) {\n  const [onVisibleCtr, setOnVisibleCtr] = useState(0);\n\n  useEffect(() => {\n    let pageVisible = true;\n\n    const inFocus = () => {\n      if (!pageVisible) { onVisibleCallback(); }\n      pageVisible = true;\n      setOnVisibleCtr(onVisibleCtr + 1);\n    }\n\n    const outFocus = () => pageVisible = false;\n\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        pageVisible = false;\n      } else {\n        if (!pageVisible) { onVisibleCallback(); }\n        pageVisible = true;\n        setOnVisibleCtr(onVisibleCtr + 1);\n      }\n    }\n\n    window.addEventListener('focus', inFocus);\n    window.addEventListener('blur', outFocus);\n    document.addEventListener('visibilitychange', handleVisibilityChange, false);\n\n    return () =>{\n      window.removeEventListener('focus', inFocus);\n      window.removeEventListener('blur', outFocus);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [onVisibleCallback]);\n\n  return [onVisibleCtr];\n}\n","import React from 'react';\nimport './App.css';\nimport NFL from './components/NFL';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div className=\"card-columns\">\n          <NFL />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}